// <auto-generated />
using System;
using System.Collections.Generic;
using HouseRenting.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HouseRenting.Dal.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240408062441_AddRequesst")]
    partial class AddRequesst
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HouseRenting.Dal.Entities.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("admins", (string)null);
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Area")
                        .HasColumnType("numeric");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientFIO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<List<string>>("MediaFiles")
                        .HasColumnType("jsonb");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ReviewStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("RoomsCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("adverts", (string)null);
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AdvertId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("AgencyPercent")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AgencySum")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("CommitedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCommited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("MeetTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MounthCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("MounthPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdvertId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("AreaGreater")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AreaLess")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal?>("PriceGreater")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceLess")
                        .HasColumnType("numeric");

                    b.Property<int?>("RoomsCountGreater")
                        .HasColumnType("integer");

                    b.Property<int?>("RoomsCountLess")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("requests", (string)null);
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.Order", b =>
                {
                    b.HasOne("HouseRenting.Dal.Entities.Admin", "Admin")
                        .WithMany("Orders")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HouseRenting.Dal.Entities.Advert", "Advert")
                        .WithMany("Orders")
                        .HasForeignKey("AdvertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Advert");
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.Request", b =>
                {
                    b.HasOne("HouseRenting.Dal.Entities.User", "User")
                        .WithMany("Requests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.Admin", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.Advert", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("HouseRenting.Dal.Entities.User", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
